/*
 * Notes API
 * API for managing notes in a Spring service, with pagination and sorting for listing notes.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.junit.Test;
import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Note;
import org.openapitools.client.model.NoteCreateRequest;
import org.openapitools.client.model.NotePage;
import org.openapitools.client.model.NoteUpdateRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final org.openapitools.client.api.DefaultApi api = new org.openapitools.client.api.DefaultApi();

    /**
     * Get all notes
     *
     * Retrieves a paginated list of notes with optional sorting.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notesGetTest() throws ApiException {
        String authorization = null;
        Integer page = null;
        Integer size = null;
        String sort = null;
        String direction = null;
        NotePage response = api.notesGet(authorization, page, size, sort, direction);
        // TODO: test validations
    }

    /**
     * Delete a specific note
     *
     * Deletes a note by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notesIdDeleteTest() throws ApiException {
        UUID id = null;
        api.notesIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get a specific note
     *
     * Retrieves a note by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notesIdGetTest() throws ApiException {
        UUID id = null;
        Note response = api.notesIdGet(id);
        // TODO: test validations
    }

    /**
     * Update a specific note
     *
     * Updates an existing note by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notesIdPutTest() throws ApiException {
        UUID id = null;
        NoteUpdateRequest noteUpdateRequest = null;
        Note response = api.notesIdPut(id, noteUpdateRequest);
        // TODO: test validations
    }

    /**
     * Create a new note
     *
     * Creates a new note with the provided title and content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notesPostTest() throws ApiException {
        NoteCreateRequest noteCreateRequest = null;
        Note response = api.notesPost(noteCreateRequest);
        // TODO: test validations
    }

}
