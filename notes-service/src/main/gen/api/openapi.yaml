openapi: 3.0.0
info:
  description: "API for managing notes in a Spring service, with pagination and sorting\
    \ for listing notes."
  title: Notes API
  version: 1.0.0
servers:
- url: /
paths:
  /notes:
    get:
      description: Retrieves a paginated list of notes with optional sorting.
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          description: Page number to retrieve (zero-based). Default is 0.
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 10
          description: Number of notes per page. Default is 10.
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          default: createdAt
          description: "Field to sort by (e.g., `title`, `createdAt`). Default is\
            \ `createdAt`."
          example: createdAt
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          default: asc
          description: "Sort direction, either ascending or descending. Default is\
            \ `asc`."
          enum:
          - asc
          - desc
          example: asc
          type: string
        style: form
      - explode: false
        in: header
        name: Authorization
        required: true
        schema:
          description: "Bearer token for authorization (e.g., `Bearer <token>`)."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotePage'
          description: A paginated and sorted list of notes.
      summary: Get all notes
      x-accepts: application/json
    post:
      description: Creates a new note with the provided title and content.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Note created successfully.
      summary: Create a new note
      x-content-type: application/json
      x-accepts: application/json
  /notes/{id}:
    delete:
      description: Deletes a note by its ID.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Note deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Note not found.
      summary: Delete a specific note
      x-accepts: application/json
    get:
      description: Retrieves a note by its ID.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Note found.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Note not found.
      summary: Get a specific note
      x-accepts: application/json
    put:
      description: Updates an existing note by its ID.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Note updated successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Note not found.
      summary: Update a specific note
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Note:
      example:
        createdAt: 2023-01-01T12:00:00Z
        id: 3e7a196f-d73e-4a6f-b823-804a8c9e9c54
        title: Sample Note
        content: This is the content of the sample note.
      properties:
        id:
          example: 3e7a196f-d73e-4a6f-b823-804a8c9e9c54
          format: uuid
          type: string
        title:
          example: Sample Note
          type: string
        content:
          example: This is the content of the sample note.
          type: string
        createdAt:
          example: 2023-01-01T12:00:00Z
          format: date-time
          type: string
      type: object
    NoteCreateRequest:
      example:
        title: New Note
        content: Content of the new note.
      properties:
        title:
          example: New Note
          type: string
        content:
          example: Content of the new note.
          type: string
      type: object
    NoteUpdateRequest:
      example:
        title: Updated Note Title
        content: Updated content of the note.
      properties:
        title:
          example: Updated Note Title
          type: string
        content:
          example: Updated content of the note.
          type: string
      type: object
    NotePage:
      example:
        size: 10
        last: false
        totalPages: 5
        page: 0
        content:
        - createdAt: 2023-01-01T12:00:00Z
          id: 3e7a196f-d73e-4a6f-b823-804a8c9e9c54
          title: Sample Note
          content: This is the content of the sample note.
        - createdAt: 2023-01-01T12:00:00Z
          id: 3e7a196f-d73e-4a6f-b823-804a8c9e9c54
          title: Sample Note
          content: This is the content of the sample note.
        totalElements: 50
      properties:
        content:
          items:
            $ref: '#/components/schemas/Note'
          type: array
        page:
          example: 0
          type: integer
        size:
          example: 10
          type: integer
        totalElements:
          example: 50
          format: int64
          type: integer
        totalPages:
          example: 5
          type: integer
        last:
          example: false
          type: boolean
      type: object
    ErrorResponse:
      description: |-
        Represents an error response.

        **Constructor:**
        - `ErrorResponse(String message, String reason, int codeHTTP)`:
          - `message`: A description of the error.
          - `reason`: The reason for the error.
          - `codeHTTP`: The HTTP status code related to the error.
      properties:
        message:
          example: Invalid input
          type: string
        reason:
          example: The provided note ID does not exist
          type: string
        codeHTTP:
          example: 404
          format: int32
          type: integer
      required:
      - codeHTTP
      - message
      - reason
      type: object

